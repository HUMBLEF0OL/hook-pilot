#!/bin/sh

# Generated by hookpilot

# Template: pre-push-secrets-check
echo "üîí Checking for Secrets in Pushed Commits..."

# Define common secret patterns (e.g., AWS keys, private tokens)
secret_patterns=(
  "AKIA[0-9A-Z]{16}"                # AWS Access Key ID (e.g., AKIA...)
  "AWS([A-Za-z0-9/+=]{30,})"        # General AWS secrets or keys
  "SECRET_KEY=[A-Za-z0-9/+=]{32,}"  # Generic secret keys
  "PRIVATE_KEY=[A-Za-z0-9/+=]{32,}" # Generic private keys
  "SG.[A-Za-z0-9]{22}"              # SendGrid API keys
  "^[0-9a-f]{32}$"                  # Firebase API keys or other MD5 hashes (potentially non-sensitive)
  "Bearer [A-Za-z0-9._~+/=-]{36,}"  # Bearer Tokens (e.g., OAuth)
  "xoxb-[0-9]{12}-[0-9]{12}-[A-Za-z0-9]{24}" # Slack Bot Tokens
  "-----BEGIN (RSA|EC) PRIVATE KEY-----"     # PGP keys
)

# Get the range of commits being pushed
local_ref=$1
remote_ref=$2
local_sha=$3
remote_sha=$4

# When pushing a branch for the first time
if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
  commit_range="$local_sha"
else
  commit_range="$remote_sha..$local_sha"
fi

echo "üîç Scanning commits in range: $commit_range"

# Get the list of files changed in the commits being pushed
changed_files=$(git diff --name-only "$commit_range")

if [ -z "$changed_files" ]; then
  echo "‚ö†Ô∏è No changes detected in the push. Skipping secret scan."
  exit 0
fi

# Combine all patterns into a single regex
combined_pattern=$(IFS="|"; echo "${secret_patterns[*]}")

# Scan files for secrets
secret_found=false
for file in $changed_files; do
  if [ -f "$file" ] && file "$file" | grep -qE 'text'; then
    echo "üîç Scanning '$file' for secrets..."
    if git grep -qE "$combined_pattern" "$file"; then
      echo "‚ùå Found secret in '$file'"
      secret_found=true
    fi
  fi
done

# Abort push if secrets are found
if [ "$secret_found" = true ]; then
  echo "‚ùå Secrets detected in one or more files. Please remove sensitive data before pushing."
  exit 1
fi

echo "‚úÖ No secrets found in the pushed commits."
