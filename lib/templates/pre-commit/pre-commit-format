#!/bin/sh

echo -e "\033[1müßπ  Running Code Formatter...\033[0m"

# Check if Prettier is installed using npx
if ! npx prettier --version > /dev/null 2>&1; then
  echo -e "\033[1;31m‚ùå  Prettier not found! Please install it (e.g., 'npm install prettier --save-dev').\033[0m"
  exit 1
fi


# Get the files_to_format pattern
files_to_format=$(get_hook_config "pre-commit" "files_to_format" "**/*.{js,jsx,ts,tsx,css,scss,md}")

echo -e "\033[1müîç  Looking for files matching pattern: $files_to_format\033[0m"

# Extract extensions from the pattern
extensions=$(echo "$files_to_format" | sed -n 's/.*{\([^}]*\)}.*/\1/p')

# Convert extensions to grep pattern
grep_pattern=$(echo "$extensions" | tr ',' '|' | sed 's/\([a-z]*\)/\\\.\1$/')

# Get staged files that match any of the extensions
staged_files=$(git diff --cached --name-only --diff-filter=ACMR | grep -E "$grep_pattern")

if [ -z "$staged_files" ]; then
    echo -e "\033[1;33m‚ö†Ô∏è  No matching files found in staged changes. Skipping formatting.\033[0m"
else    
    # Format code only if files are found
    echo "$staged_files" | xargs npx prettier --write
    if [ $? -ne 0 ]; then
        echo -e "\033[1;31m‚ùå  Formatting failed. Please check for errors.\033[0m"
        exit 1
    fi
    echo -e "\033[1;32m‚úÖ  Code formatted successfully. Please stage the formatted files\033[0m"
    exit 1
fi
