#!/bin/sh
# ANSI color codes
WHITE='\033[1;37m'
RED='\033[1;31m'
YELLOW='\033[1;33m'
GREEN='\033[1;32m'
BOLD='\033[1m'
RESET='\033[0m'

echo "${BOLD}${WHITE}üîí Running Security Check...${RESET}"

# Run npm audit and capture the exit code
npm audit --omit=dev --json >/tmp/audit_output.json 2>/tmp/audit_error.log
audit_exit_code=$?

# Check for npm audit failure or network issues
if [ $audit_exit_code -ne 0 ]; then
  echo "${BOLD}${RED}‚ùå 'npm audit' failed with exit code $audit_exit_code. Check error log for details.${RESET}"
  cat /tmp/audit_error.log
  exit 1
fi

# Check if the audit output is empty
if [ ! -s /tmp/audit_output.json ]; then
  echo "${BOLD}${RED}‚ùå No vulnerabilities found, but the audit output is empty. Check your npm configuration.${RESET}"
  exit 1
fi

# Extract vulnerability counts using grep and sed
critical=$(grep -o '"critical":[0-9]*' /tmp/audit_output.json | sed 's/"critical"://')
high=$(grep -o '"high":[0-9]*' /tmp/audit_output.json | sed 's/"high"://')
moderate=$(grep -o '"moderate":[0-9]*' /tmp/audit_output.json | sed 's/"moderate"://')
low=$(grep -o '"low":[0-9]*' /tmp/audit_output.json | sed 's/"low"://')

# Default values if vulnerabilities are not found
critical=${critical:-0}
high=${high:-0}
moderate=${moderate:-0}
low=${low:-0}

# Display the summary
echo "${BOLD}${WHITE}üîç Security Check Summary:${RESET}"
echo "   ${BOLD}${RED}Critical: $critical${RESET}"
echo "   ${BOLD}${YELLOW}High: $high${RESET}"
echo "   ${BOLD}${WHITE}Moderate: $moderate${RESET}"
echo "   ${BOLD}${GREEN}Low: $low${RESET}"

# Optionally, set custom thresholds to warn instead of fail on certain severities
critical_threshold=1
high_threshold=5

# Terminate on critical vulnerabilities
if [ "$critical" -gt 0 ]; then
  echo "${BOLD}${RED}‚ùå Critical vulnerabilities detected. Fix them before committing.${RESET}"
  exit 1
fi

# Warn on high vulnerabilities if the threshold is reached
if [ "$high" -ge "$high_threshold" ]; then
  echo "${BOLD}${YELLOW}‚ö†Ô∏è High vulnerabilities detected ($high). Please review and address them.${RESET}"
fi

# Terminate on high vulnerabilities if the threshold is exceeded
if [ "$high" -gt "$critical_threshold" ]; then
  echo "${BOLD}${RED}‚ùå High vulnerabilities exceed the threshold. Fix them before committing.${RESET}"
  exit 1
fi

echo "${BOLD}${GREEN}‚úÖ No critical security vulnerabilities found.${RESET}"
